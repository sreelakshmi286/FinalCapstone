{
	"info": {
		"_postman_id": "02d5606c-cc91-4a39-bc00-76e48488cecb",
		"name": "Postman_capstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32895076"
	},
	"item": [
		{
			"name": "First Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test for verification status code \r",
							"pm.test(\"verify the status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify the status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"//Test for verification status code\r",
							"pm.test(\"response time is less than 900ms\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
							"});\r",
							"//Headers\r",
							"//checkn the status code text\r",
							"pm.test(\"check the status code name\",()=>{\r",
							"    pm.response.to.have.status(\"OK\")\r",
							"});\r",
							"pm.test(\"Status code name has string \",() =>{\r",
							"    pm.response.to.have.status(\"Created\");\r",
							" })\r",
							"pm.test(\"Response header\", function (){\r",
							"    pm.response.to.have.header(\"Content-Type\")\r",
							"});\r",
							"pm.test(\"Response header\", function (){\r",
							"    pm.expect(pm.response.to.have.header(\"Content-Type\")).to.eql(\"application/json;charset=utf-8\");\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"verify status code is 200\", function(){\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							" \r",
							" \r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"verify datatype\"),()=>{\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.id).to.be.a(\"interger\");\r",
							"    pm.expect(jsonData.data).to.be.an(\"array\");\r",
							"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
							"}\r",
							" \r",
							"//validating json fields in response\r",
							" \r",
							"pm.test(\"verify data\"),()=>{\r",
							"    pm.expect(jsonData.data[2].id).eql.to(\"3\");\r",
							"}\r",
							"pm.test(\"verify data\"),()=>{\r",
							"    pm.expect(jsonData.data[2].last_name).eql.to(\"Wong\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?delay={{delayId}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "{{delayId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Second Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test for verification status code \r",
							"pm.test(\"verify the status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify the status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"//Test for verification status code\r",
							"pm.test(\"response time is less than 900ms\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
							"});\r",
							"//Headers\r",
							"//checkn the status code text\r",
							"pm.test(\"check the status code name\",()=>{\r",
							"    pm.response.to.have.status(\"OK\")\r",
							"});\r",
							"pm.test(\"Status code name has string \",() =>{\r",
							"    pm.response.to.have.status(\"Created\");\r",
							" })\r",
							"pm.test(\"Response header\", function (){\r",
							"    pm.response.to.have.header(\"Content-Type\")\r",
							"});\r",
							"pm.test(\"Response header\", function (){\r",
							"    pm.expect(pm.response.to.have.header(\"Content-Type\")).to.eql(\"application/json;charset=utf-8\");\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"verify status code is 200\", function(){\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							" \r",
							" \r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"verify datatype\"),()=>{\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.id).to.be.a(\"interger\");\r",
							"    pm.expect(jsonData.data).to.be.an(\"array\");\r",
							"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
							"}\r",
							" \r",
							"//validating json fields in response\r",
							" \r",
							"pm.test(\"verify data\"),()=>{\r",
							"    pm.expect(jsonData.data[2].id).eql.to(\"3\");\r",
							"}\r",
							"pm.test(\"verify data\"),()=>{\r",
							"    pm.expect(jsonData.data[2].last_name).eql.to(\"Wong\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?delay=3",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Test for verification status code \r",
							"pm.test(\"verify the status code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"verify the status code\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"//Test for verification status code\r",
							"pm.test(\"response time is less than 900ms\", function(){\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
							"});\r",
							"//Headers\r",
							"//checkn the status code text\r",
							"pm.test(\"check the status code name\",()=>{\r",
							"    pm.response.to.have.status(\"OK\")\r",
							"});\r",
							"pm.test(\"Status code name has string \",() =>{\r",
							"    pm.response.to.have.status(\"Created\");\r",
							" })\r",
							"pm.test(\"Response header\", function (){\r",
							"    pm.response.to.have.header(\"Content-Type\")\r",
							"});\r",
							"pm.test(\"Response header\", function (){\r",
							"    pm.expect(pm.response.to.have.header(\"Content-Type\")).to.eql(\"application/json;charset=utf-8\");\r",
							"});\r",
							" \r",
							" \r",
							"pm.test(\"verify status code is 200\", function(){\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							" \r",
							" \r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"verify datatype\"),()=>{\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.id).to.be.a(\"interger\");\r",
							"    pm.expect(jsonData.data).to.be.an(\"array\");\r",
							"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
							"}\r",
							" \r",
							"//validating json fields in response\r",
							" \r",
							"pm.test(\"verify data\"),()=>{\r",
							"    pm.expect(jsonData.data[2].id).eql.to(\"3\");\r",
							"}\r",
							"pm.test(\"verify data\"),()=>{\r",
							"    pm.expect(jsonData.data[2].last_name).eql.to(\"Wong\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?delay={delayId}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "{delayId}"
						}
					]
				}
			},
			"response": []
		}
	]
}